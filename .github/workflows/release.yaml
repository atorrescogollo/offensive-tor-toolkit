name: Release

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  docker_push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
    - name: Get tag
      id: get_tag
      run: |
        export TAG="${GITHUB_REF#refs/*/}"
        [ "$TAG" == "master" ] && TAG=latest
        echo ::set-output name=tag::${TAG}
    - uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        file: ./Dockerfile
        tags: |
          atorrescogollo/offensive-tor-toolkit:${{ steps.get_tag.outputs.tag }}
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Retrieve artifacts
      run: |
        docker create --name ott atorrescogollo/offensive-tor-toolkit:${{ steps.get_tag.outputs.tag }}
        docker cp ott:/dist dist
        docker rm ott
    - name: Save built artifacts
      uses: 'actions/upload-artifact@v2'
      with:
        name: offensive-tor-toolkit-${{ steps.get_tag.outputs.tag }}
        path: dist

  publish_release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: docker_push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@master
      with:
        name: offensive-tor-toolkit-${{ needs.docker_push.outputs.tag }}
        path: offensive-tor-toolkit-${{ needs.docker_push.outputs.tag }}
    - name: Compress artifacts
      run: |
        tar -cvzf "offensive-tor-toolkit-${{ needs.docker_push.outputs.tag }}.tar.gz" "offensive-tor-toolkit-${{ needs.docker_push.outputs.tag }}/"
    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: changelog
      env:
        REPO: ${{ github.repository }}
    - uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAG_NAME: ${{ needs.docker_push.outputs.tag }}
      with:
        artifacts: "*.tar.gz"
        body: ${{ steps.changelog.outputs.changelog }}
        token: ${{ secrets.GITHUB_TOKEN }}
